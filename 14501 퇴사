https://www.acmicpc.net/problem/14501

N+1일째에 퇴사 계획. N일 동안 할 상담을 정함.
매일 하나의 상담만 잡았지만, n일이 걸리는 상담들이라 취사선택해야.
취사선택 시에는 각 상담에 걸리는 시간과 보상을 고려, 최대한의 보상을 목표로 함.

처음에는 O(n2)짜리 시간복잡도 프로그램을 기획했다. 1일부터 시작해서, greedy algorithm을 돌리는 것이다.
이 경우 O(n2/2)만큼의 traversal을 하게 되고, O(n2)의 해답도 백준을 통과할 수 있다.

그런데 더 효율적인 O(n)의 프로그래밍이 가능하다. Dynamic Programming을 사용한다.
프로그램의 나머지 부분은 어렵지 않다.
max(CumComp(day + 1), CumComp(day + T[day]) + P[day]); 의 점화식을 도출해 내기만 하면 된다.
이때 이 CumComp(i)는 i번째 날까지의 누적 보상이다. 그날의 일을 하거나, 하지 않거나의 경우의 CumComp를 비교, 도출하는 식이다.
구현 시에는 recursion을 사용한다. Cumcomp 함수의 내부에 Cumcomp를 포함.
